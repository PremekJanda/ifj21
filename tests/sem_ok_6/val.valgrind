==904822== Memcheck, a memory error detector
==904822== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==904822== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==904822== Command: ./compiler
==904822== 
==904822== Conditional jump or move depends on uninitialised value(s)
==904822==    at 0x40DEC2: generate_code (code_generator.c:83)
==904822==    by 0x40127A: main (compiler.c:45)
==904822== 
==904822== 
==904822== HEAP SUMMARY:
==904822==     in use at exit: 203 bytes in 6 blocks
==904822==   total heap usage: 6,113 allocs, 6,107 frees, 250,358 bytes allocated
==904822== 
==904822== 2 bytes in 1 blocks are indirectly lost in loss record 1 of 6
==904822==    at 0x483A809: malloc (vg_replace_malloc.c:307)
==904822==    by 0x404871: node_setdata (tree.c:47)
==904822==    by 0x4031DB: syntax_analyzer (parser.c:237)
==904822==    by 0x40123D: main (compiler.c:27)
==904822== 
==904822== 12 bytes in 1 blocks are indirectly lost in loss record 2 of 6
==904822==    at 0x483A809: malloc (vg_replace_malloc.c:307)
==904822==    by 0x40481A: node_setdata (tree.c:40)
==904822==    by 0x4031DB: syntax_analyzer (parser.c:237)
==904822==    by 0x40123D: main (compiler.c:27)
==904822== 
==904822== 32 bytes in 1 blocks are indirectly lost in loss record 3 of 6
==904822==    at 0x483A809: malloc (vg_replace_malloc.c:307)
==904822==    by 0x40478F: node_init (tree.c:22)
==904822==    by 0x4031A4: syntax_analyzer (parser.c:236)
==904822==    by 0x40123D: main (compiler.c:27)
==904822== 
==904822== 45 bytes in 1 blocks are definitely lost in loss record 4 of 6
==904822==    at 0x483A809: malloc (vg_replace_malloc.c:307)
==904822==    by 0x409E83: buffer_init (mystring.c:22)
==904822==    by 0x40B957: convert_strings.part.0 (code_generator.c:980)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:1002)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:998)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:998)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:998)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:998)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:998)
==904822==    by 0x40BD3F: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40BC13: convert_strings (code_generator.c:998)
==904822==    by 0x40DF05: convert_strings (code_generator.c:998)
==904822==    by 0x40DF05: generate_code (code_generator.c:55)
==904822==    by 0x40127A: main (compiler.c:45)
==904822== 
==904822== 80 bytes in 1 blocks are indirectly lost in loss record 5 of 6
==904822==    at 0x483A809: malloc (vg_replace_malloc.c:307)
==904822==    by 0x40477C: node_init (tree.c:19)
==904822==    by 0x4031A4: syntax_analyzer (parser.c:236)
==904822==    by 0x40123D: main (compiler.c:27)
==904822== 
==904822== 158 (32 direct, 126 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 6
==904822==    at 0x483A809: malloc (vg_replace_malloc.c:307)
==904822==    by 0x403199: syntax_analyzer (parser.c:235)
==904822==    by 0x40123D: main (compiler.c:27)
==904822== 
==904822== LEAK SUMMARY:
==904822==    definitely lost: 77 bytes in 2 blocks
==904822==    indirectly lost: 126 bytes in 4 blocks
==904822==      possibly lost: 0 bytes in 0 blocks
==904822==    still reachable: 0 bytes in 0 blocks
==904822==         suppressed: 0 bytes in 0 blocks
==904822== 
==904822== Use --track-origins=yes to see where uninitialised values come from
==904822== For lists of detected and suppressed errors, rerun with: -s
==904822== ERROR SUMMARY: 3 errors from 3 contexts (suppressed: 0 from 0)
