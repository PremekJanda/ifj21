;require;id;(;);=;expr;,;return;global;:;function;end;local;if;else;while;integer;string;number;nil;<;>;==;~=;<=;>=;?;
<prog>;1;;;;;;;;;;;;;;;;;;;;;;;;;;;
<main-list>;;2;;;;;;;2;;2;;;;;;;;;;;;;;;;3;
<def-decl-fcall>;;37;;;;;;;35;;36;;;;;;;;;;;;;;;;;
<f-or-type>;;;;;;;;;;;39;;;;;;40;40;40;40;;;;;;;;
<f-arg-list>;;47;;48;;;;;;;;;;;;;;;;;;;;;;;;
<return-types>;;52;;;;;;52;52;53;52;52;52;52;;52;;;;;;;;;;;52;
<stmt-list>;;4;;;;;;4;;;;5;4;4;5;4;;;;;;;;;;;;
<param-list>;;31;;30;;31;;;;;;;;;;;;;;;;;;;;;;
<types>;;;;57;;;;;;;;;;;;;56;56;56;56;;;;;;;;
<type>;;;;;;;;;;;;;;;;;61;62;63;64;;;;;;;;
<f-arg>;;51;;;;;;;;;;;;;;;;;;;;;;;;;;
<f-arg-another>;;;;50;;;49;;;;;;;;;;;;;;;;;;;;;
<type-list>;;55;;55;;;54;55;55;;55;55;55;55;;55;;;;;;;;;;;55;
<stmt>;;6;;;;;;10;;;;;7;9;;8;;;;;;;;;;;;
<item-list>;;32;;;;32;;;;;;;;;;;;;;;;;;;;;;
<f-or-item>;;44;;;;43;;;;;;;;;;;;;;;;;;;;;;
<assign-or-fcall>;;;11;;12;;12;;;;;;;;;;;;;;;;;;;;;
<decl-local>;;;;;;;;;;;;;38;;;;;;;;;;;;;;;
<while>;;;;;;;;;;;;;;;;59;;;;;;;;;;;;
<if>;;;;;;;;;;;;;;58;;;;;;;;;;;;;;
<return>;;;;;;;;21;;;;;;;;;;;;;;;;;;;;
<item>;;19;;;;20;;;;;;;;;;;;;;;;;;;;;;
<id-list>;;;;;18;;17;;;;;;;;;;;;;;;;;;;;;
<f-or-item-list>;;14;;;;13;;;;;;;;;;;;;;;;;;;;;;
<decl-assign>;;42;;;41;;;42;42;;42;42;42;42;42;42;;;;;;;;;;;42;
<cond>;;60;;;;60;;;;;;;;;;;;;;;;;;;;;;
<return-list>;;23;;;;23;;22;;;;22;22;22;22;22;;;;;;;;;;;;
<item-another>;;34;;34;;;33;34;;;;34;34;34;34;34;;;;;;;;;;;;
<fcall-or-item-list>;;16;15;;;;16;16;;;;16;16;16;16;16;;;;;;;;;;;;
<cond-oper>;;;;;;;;;;;;;;;;;;;;;65;66;67;68;69;70;;
<return-f-or-items>;;25;;;;24;;;;;;;;;;;;;;;;;;;;;;
<id-or-fcall>;;45;46;;;;;45;45;;45;45;45;45;45;45;;;;;;;;;;;45;
<return-f-or-items'>;;29;;;;;28;29;;;;29;29;29;29;29;;;;;;;;;;;;
<f-or-return-list>;;27;26;;;;27;27;;;;27;27;27;27;27;;;;;;;;;;;;

