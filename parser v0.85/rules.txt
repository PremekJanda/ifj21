
require;"ifj21";<main-list>
<def-decl-fcall>;<main-list>
eps
<stmt>;<stmt-list>
eps
id;<assign-or-fcall>
<decl-local>
<while>
<if>
<return>
(;<param-list>;)
<id-list>;=;<f-or-item-list>
expr;<item-another>
id;<fcall-or-item-list>
(;<param-list>;)
<item-another>
,;id;<id-list>
eps
id
expr
return;<item-list>
eps
<item-list>
<item>;<item-another>
,;<item>;<item-another>
eps
global;id;:;<f-or-type>
function;id;(;<f-arg-list>;);<return-types>;<stmt-list>;end
id;(;<param-list>;)
local;id;:;<type>;<decl-assign>
function;(;<types>;);<return-types>
<type>;<decl-assign>
=;<f-or-item-list>
eps
<f-arg>;<f-arg-another>
eps
,;<f-arg>;<f-arg-another>
eps
id;:;<type>
eps
:;<type>;<type-list>
,;<type>;<type-list>
eps
<type>;<type-list>
eps
if;<cond>;then;<stmt-list>;else;<stmt-list>;end
while;<cond>;do;<stmt-list>;end
<item>;<cond-oper>;<item>
integer
string
number
<
>
==
~=
<=
>=